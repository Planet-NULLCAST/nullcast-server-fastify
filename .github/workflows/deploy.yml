name: deploy
# true: 
#   workflow_dispatch: 
#     inputs: 
#       deployment_notes: 
#         description: "Deployment notes"
#         required: true
on: 
  push:
    branches: [development, 54-trial-deployment]
  pull_request:
    branches: [development, 54-trial-deployment]
    types: [closed]
# Trigger the workflow on push or pull request,
# branches:
#   - development
jobs:
  deploy:
    name: "Deploy (developement)"
    runs-on: ubuntu-latest
    # env:
    #   TARGET_ENV: "production"
    #   SERVERIP: ${{ secrets.DEV_SERVERIP }}
    #   SSHKEY: ${{ secrets.DEV_SSHKEY }}
    #   USERNAME: ${{ secrets.DEV_USERNAME }}
    steps:
    - uses: actions/checkout@v2
    - name: check files
      run: ls -a
    - name: chmod
      run: chmod +x scripts/*
    - name: Check
      run: MY_SECRET="${{ secrets.DEV_USERNAME }}" scripts/check.sh
    - name: Executing appleboy ssh action
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEV_SERVERIP }}
        username: ${{ secrets.DEV_USERNAME }}
        key: ${{ secrets.DEV_SSHKEY }}
        port: 22
        script: |
          echo "${{ secrets.DEV_USERNAME }}"
          cat ./scripts/dev_deploy.sh
      # run the deploy pipeline on master only
      # if: github.ref == 'refs/heads/54-trial-deployment'
      # steps:
      # - name: Nullcast | Check ssh
      #   run: |
      #     'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
      #     mkdir -p ~/.ssh
      #     eval $(ssh-agent -s)
      #     '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
      # - name: Nullcast | Run deploy script
      #   run: |
      #     ssh-add <(echo "$SSHKEY" | tr -d '\r')
      #     ./scripts/dev_deploy.sh | ssh -o StrictHostKeyChecking=no $USERNAME@$SERVERIP
      #     echo "Deploy step finished"